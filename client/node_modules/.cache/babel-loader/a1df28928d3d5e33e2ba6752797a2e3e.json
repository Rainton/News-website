{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\75165\\\\Documents\\\\course\\\\CSCI 571\\\\hw8\\\\client\\\\src\\\\Components\\\\SelectBar.js\";\nimport React from \"react\";\nimport AsyncSelect from \"react-select/async\";\n\nclass SelectBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadOptions = (inputValue, callback) => {\n      if (!inputValue) {\n        callback([]);\n      } else {\n        setTimeout(() => {\n          fetch(\"https://yutong-li.cognitiveservices.azure.com/bing/v7.0/suggestions?mkt=en-US&q=\" + this.state.inputValue, {\n            headers: {\n              'Ocp-Apim-Subscription-Key': 'a42b6d1b1fad47d7b33425d7eea2f04f'\n            }\n          }).then(res => res.json()).then(data => {\n            let suggestions = [];\n\n            if (\"suggestionGroups\" in data) {\n              const resfilter = data[\"suggestionGroups\"][0][\"searchSuggestions\"];\n\n              for (let i = 0; i < resfilter.length; i++) {\n                let val = resfilter[i][\"displayText\"];\n                suggestions.push({\n                  value: val,\n                  label: val\n                });\n              }\n            }\n\n            callback(suggestions);\n          }).catch(error => {\n            console.log(error);\n          });\n        });\n      }\n    };\n\n    this.handleInputChange = newValue => {\n      const inputValue = newValue.replace(/\\W/g, '');\n      this.setState({\n        inputValue\n      });\n      return inputValue;\n    };\n\n    this.state = {\n      options: {}\n    };\n  }\n\n  async autosuggest() {\n    const response = await fetch(\"https://yutong-li.cognitiveservices.azure.com/bing/v7.0/suggestions?mkt=en-US&q=\" + this.state.inputValue, {\n      headers: {\n        'Ocp-Apim-Subscription-Key': 'a42b6d1b1fad47d7b33425d7eea2f04f'\n      }\n    });\n    const res = await response.json();\n    let suggestions = [];\n    console.log(res);\n\n    if (\"suggestionGroups\" in res) {\n      var resfilter = res[\"suggestionGroups\"][0][\"searchSuggestions\"];\n\n      for (var i = 0; i < resfilter.length; i++) {\n        let val = resfilter[i][\"displayText\"];\n        suggestions.push({\n          value: val,\n          label: val\n        });\n      }\n    }\n\n    return suggestions;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AsyncSelect, {\n      placeholder: \"Enter keyword ..\",\n      className: \"selectBar\",\n      onInputChange: this.handleInputChange,\n      loadOptions: this.loadOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default SelectBar;","map":{"version":3,"sources":["C:/Users/75165/Documents/course/CSCI 571/hw8/client/src/Components/SelectBar.js"],"names":["React","AsyncSelect","SelectBar","Component","constructor","props","loadOptions","inputValue","callback","setTimeout","fetch","state","headers","then","res","json","data","suggestions","resfilter","i","length","val","push","value","label","catch","error","console","log","handleInputChange","newValue","replace","setState","options","autosuggest","response","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport AsyncSelect from \"react-select/async\";\r\n\r\nclass SelectBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {options: {}};\r\n    }\r\n\r\n    async autosuggest() {\r\n        const response = await fetch(\r\n            \"https://yutong-li.cognitiveservices.azure.com/bing/v7.0/suggestions?mkt=en-US&q=\" + this.state.inputValue, {\r\n                headers: {\r\n                    'Ocp-Apim-Subscription-Key': 'a42b6d1b1fad47d7b33425d7eea2f04f'\r\n                }\r\n            });\r\n        const res = await response.json();\r\n        let suggestions = [];\r\n        console.log(res);\r\n        if (\"suggestionGroups\" in res) {\r\n            var resfilter = res[\"suggestionGroups\"][0][\"searchSuggestions\"];\r\n            for (var i = 0; i < resfilter.length; i++) {\r\n                let val = resfilter[i][\"displayText\"];\r\n                suggestions.push({value: val, label: val});\r\n            }\r\n        }\r\n        return suggestions;\r\n    }\r\n\r\n    loadOptions = (inputValue, callback) => {\r\n        if (!inputValue) {\r\n            callback([]);\r\n        } else {\r\n            setTimeout(() => {\r\n                fetch(\r\n                    \"https://yutong-li.cognitiveservices.azure.com/bing/v7.0/suggestions?mkt=en-US&q=\" + this.state.inputValue, {\r\n                        headers: {\r\n                            'Ocp-Apim-Subscription-Key': 'a42b6d1b1fad47d7b33425d7eea2f04f'\r\n                        }\r\n                    }).then(res => res.json())\r\n                    .then((data) => {\r\n                        let suggestions = [];\r\n                        if (\"suggestionGroups\" in data) {\r\n                            const resfilter = data[\"suggestionGroups\"][0][\"searchSuggestions\"];\r\n                            for (let i = 0; i < resfilter.length; i++) {\r\n                                let val = resfilter[i][\"displayText\"];\r\n                                suggestions.push({value: val, label: val});\r\n                            }\r\n                        }\r\n                        callback(suggestions);\r\n                    }).catch((error) => {\r\n                    console.log(error);\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    handleInputChange = (newValue) => {\r\n        const inputValue = newValue.replace(/\\W/g, '');\r\n        this.setState({inputValue});\r\n        return inputValue;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AsyncSelect placeholder=\"Enter keyword ..\" className=\"selectBar\" onInputChange={this.handleInputChange}\r\n                         loadOptions={this.loadOptions}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectBar;\r\n"]},"metadata":{},"sourceType":"module"}