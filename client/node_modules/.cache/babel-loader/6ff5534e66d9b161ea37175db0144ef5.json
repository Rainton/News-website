{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\75165\\\\Documents\\\\course\\\\CSCI 571\\\\hw8\\\\client\\\\src\\\\Components\\\\SelectBar.js\";\nimport React from \"react\";\nimport AsyncSelect from \"react-select/async\";\n\nclass SelectBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadOptions = (inputValue, callback) => {\n      if (!inputValue) {\n        callback([]);\n      } else {\n        setTimeout(() => {\n          fetch(\"https://yutong-li.cognitiveservices.azure.com/bing/v7.0/suggestions?mkt=en-US&q=\" + this.state.inputValue, {\n            headers: {\n              'Ocp-Apim-Subscription-Key': 'a42b6d1b1fad47d7b33425d7eea2f04f'\n            }\n          }).then(res => {\n            return res.json();\n          }).then(data => {\n            let suggestions = [];\n\n            if (\"suggestionGroups\" in data) {\n              const resfilter = data[\"suggestionGroups\"][0][\"searchSuggestions\"];\n\n              for (let i = 0; i < resfilter.length; i++) {\n                let val = resfilter[i][\"displayText\"];\n                suggestions.push({\n                  value: val,\n                  label: val\n                });\n              }\n            }\n\n            console.log(suggestions);\n            callback(suggestions);\n          }).catch(error => {\n            console.log(error);\n          });\n        });\n      }\n    };\n\n    this.handleInputChange = options => {\n      if (options) {\n        this.setState({\n          options\n        });\n      }\n    };\n\n    this.state = {\n      options: {}\n    };\n  }\n\n  async autosuggest() {\n    const response = await fetch(\"https://yutong-li.cognitiveservices.azure.com/bing/v7.0/suggestions?mkt=en-US&q=\" + this.state.inputValue, {\n      headers: {\n        'Ocp-Apim-Subscription-Key': 'a42b6d1b1fad47d7b33425d7eea2f04f'\n      }\n    });\n    const res = await response.json();\n    let suggestions = [];\n    console.log(res);\n\n    if (\"suggestionGroups\" in res) {\n      var resfilter = res[\"suggestionGroups\"][0][\"searchSuggestions\"];\n\n      for (var i = 0; i < resfilter.length; i++) {\n        let val = resfilter[i][\"displayText\"];\n        suggestions.push({\n          value: val,\n          label: val\n        });\n      }\n    }\n\n    return suggestions;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AsyncSelect, {\n      placeholder: \"Enter keyword ..\",\n      className: \"selectBar\",\n      onChange: e => {\n        this.handleInputChange(e);\n      },\n      loadOptions: this.loadOptions,\n      value: this.state.options,\n      defaultOptions: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default SelectBar;","map":{"version":3,"sources":["C:/Users/75165/Documents/course/CSCI 571/hw8/client/src/Components/SelectBar.js"],"names":["React","AsyncSelect","SelectBar","Component","constructor","props","loadOptions","inputValue","callback","setTimeout","fetch","state","headers","then","res","json","data","suggestions","resfilter","i","length","val","push","value","label","console","log","catch","error","handleInputChange","options","setState","autosuggest","response","render","e"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport AsyncSelect from \"react-select/async\";\r\n\r\nclass SelectBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {options: {}};\r\n    }\r\n\r\n    async autosuggest() {\r\n        const response = await fetch(\r\n            \"https://yutong-li.cognitiveservices.azure.com/bing/v7.0/suggestions?mkt=en-US&q=\" + this.state.inputValue, {\r\n                headers: {\r\n                    'Ocp-Apim-Subscription-Key': 'a42b6d1b1fad47d7b33425d7eea2f04f'\r\n                }\r\n            });\r\n        const res = await response.json();\r\n        let suggestions = [];\r\n        console.log(res);\r\n        if (\"suggestionGroups\" in res) {\r\n            var resfilter = res[\"suggestionGroups\"][0][\"searchSuggestions\"];\r\n            for (var i = 0; i < resfilter.length; i++) {\r\n                let val = resfilter[i][\"displayText\"];\r\n                suggestions.push({value: val, label: val});\r\n            }\r\n        }\r\n        return suggestions;\r\n    }\r\n\r\n    loadOptions = (inputValue, callback) => {\r\n        if (!inputValue) {\r\n            callback([]);\r\n        } else {\r\n            setTimeout(() => {\r\n                fetch(\r\n                    \"https://yutong-li.cognitiveservices.azure.com/bing/v7.0/suggestions?mkt=en-US&q=\" + this.state.inputValue, {\r\n                        headers: {\r\n                            'Ocp-Apim-Subscription-Key': 'a42b6d1b1fad47d7b33425d7eea2f04f'\r\n                        }\r\n                    }).then(res => {\r\n                    return res.json();\r\n                })\r\n                    .then((data) => {\r\n                        let suggestions = [];\r\n                        if (\"suggestionGroups\" in data) {\r\n                            const resfilter = data[\"suggestionGroups\"][0][\"searchSuggestions\"];\r\n                            for (let i = 0; i < resfilter.length; i++) {\r\n                                let val = resfilter[i][\"displayText\"];\r\n                                suggestions.push({value: val, label: val});\r\n                            }\r\n                        }\r\n                        console.log(suggestions);\r\n                        callback(suggestions);\r\n                    }).catch((error) => {\r\n                    console.log(error);\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    handleInputChange = (options) => {\r\n        if (options) {\r\n            this.setState({options});\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AsyncSelect\r\n                placeholder=\"Enter keyword ..\"\r\n                className=\"selectBar\"\r\n                onChange={(e) => {\r\n                    this.handleInputChange(e);\r\n                }}\r\n                loadOptions={this.loadOptions}\r\n                value={this.state.options}\r\n                defaultOptions={false}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectBar;\r\n"]},"metadata":{},"sourceType":"module"}