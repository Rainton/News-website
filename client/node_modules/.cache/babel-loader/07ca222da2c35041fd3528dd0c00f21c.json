{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\75165\\\\Documents\\\\course\\\\CSCI 571\\\\hw8\\\\client\\\\src\\\\Components\\\\SelectBar.js\";\nimport React from \"react\";\nimport Select from \"react-select\";\nimport AsyncSelect from \"react-select/lib/Async\";\n\nclass SelectBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadOptions = (inputValue, callback) => {};\n\n    this.handleInputChange = newValue => {\n      const inputValue = newValue.replace(/\\W/g, '');\n      this.setState({\n        inputValue\n      });\n      this.autosuggest();\n      return inputValue;\n    };\n\n    this.state = {\n      inputValue: \"\",\n      suggest: []\n    };\n  }\n\n  autosuggest() {\n    fetch(\"https://yutong-li.cognitiveservices.azure.com/bing/v7.0/suggestions?mkt=en-US&q=\" + this.state.inputValue, {\n      headers: {\n        'Ocp-Apim-Subscription-Key': 'a42b6d1b1fad47d7b33425d7eea2f04f'\n      }\n    }).then(res => res.json()).then(res => {\n      let suggestions = new Array();\n      console.log(res);\n\n      if (\"suggestionGroups\" in res) {\n        var resfilter = res[\"suggestionGroups\"][0][\"searchSuggestions\"];\n        console.log(resfilter);\n\n        for (var i = 0; i < resfilter.length; i++) {\n          suggestions.push(resfilter[i][\"displayText\"]);\n        }\n\n        this.setState({\n          suggest: suggestions\n        });\n      }\n\n      console.log(this.state.suggest);\n    });\n  }\n\n  render() {\n    return React.createElement(AsyncSelect, {\n      placeholder: \"Enter keyword ..\",\n      className: \"selectBar\",\n      onInputChange: this.handleInputChange,\n      loadOptions: t,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default SelectBar;","map":{"version":3,"sources":["C:/Users/75165/Documents/course/CSCI 571/hw8/client/src/Components/SelectBar.js"],"names":["React","Select","AsyncSelect","SelectBar","Component","constructor","props","loadOptions","inputValue","callback","handleInputChange","newValue","replace","setState","autosuggest","state","suggest","fetch","headers","then","res","json","suggestions","Array","console","log","resfilter","i","length","push","render","t"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA0BnBC,WA1BmB,GA0BP,CAACC,UAAD,EAAYC,QAAZ,KAAuB,CAElC,CA5BkB;;AAAA,SA8BnBC,iBA9BmB,GA8BEC,QAAD,IAAc;AAC9B,YAAMH,UAAU,GAAGG,QAAQ,CAACC,OAAT,CAAiB,KAAjB,EAAwB,EAAxB,CAAnB;AACA,WAAKC,QAAL,CAAc;AAACL,QAAAA;AAAD,OAAd;AACA,WAAKM,WAAL;AACA,aAAON,UAAP;AACH,KAnCkB;;AAEf,SAAKO,KAAL,GAAa;AAACP,MAAAA,UAAU,EAAE,EAAb;AAAiBQ,MAAAA,OAAO,EAAE;AAA1B,KAAb;AACH;;AAEDF,EAAAA,WAAW,GAAG;AACVG,IAAAA,KAAK,CAAC,qFAAqF,KAAKF,KAAL,CAAWP,UAAjG,EAA6G;AAC9GU,MAAAA,OAAO,EAAE;AACL,qCAA6B;AADxB;AADqG,KAA7G,CAAL,CAIGC,IAJH,CAIQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJf,EAKKF,IALL,CAKUC,GAAG,IAAI;AACT,UAAIE,WAAW,GAAG,IAAIC,KAAJ,EAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;;AACA,UAAI,sBAAsBA,GAA1B,EAA+B;AAC3B,YAAIM,SAAS,GAAGN,GAAG,CAAC,kBAAD,CAAH,CAAwB,CAAxB,EAA2B,mBAA3B,CAAhB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACE,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvCL,UAAAA,WAAW,CAACO,IAAZ,CAAiBH,SAAS,CAACC,CAAD,CAAT,CAAa,aAAb,CAAjB;AACH;;AACD,aAAKd,QAAL,CAAc;AAACG,UAAAA,OAAO,EAAEM;AAAV,SAAd;AACH;;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWC,OAAvB;AACH,KAjBL;AAkBH;;AAaDc,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,WAAD;AAAa,MAAA,WAAW,EAAC,kBAAzB;AAA4C,MAAA,SAAS,EAAC,WAAtD;AAAkE,MAAA,aAAa,EAAE,KAAKpB,iBAAtF;AACa,MAAA,WAAW,EAAEqB,CAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAIH;;AA3CmC;;AA8CxC,eAAe5B,SAAf","sourcesContent":["import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport AsyncSelect from \"react-select/lib/Async\";\r\n\r\nclass SelectBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {inputValue: \"\", suggest: []};\r\n    }\r\n\r\n    autosuggest() {\r\n        fetch(\"https://yutong-li.cognitiveservices.azure.com/bing/v7.0/suggestions?mkt=en-US&q=\" + this.state.inputValue, {\r\n            headers: {\r\n                'Ocp-Apim-Subscription-Key': 'a42b6d1b1fad47d7b33425d7eea2f04f'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                let suggestions = new Array();\r\n                console.log(res);\r\n                if (\"suggestionGroups\" in res) {\r\n                    var resfilter = res[\"suggestionGroups\"][0][\"searchSuggestions\"];\r\n                    console.log(resfilter);\r\n                    for (var i = 0; i < resfilter.length; i++) {\r\n                        suggestions.push(resfilter[i][\"displayText\"]);\r\n                    }\r\n                    this.setState({suggest: suggestions});\r\n                }\r\n                console.log(this.state.suggest);\r\n            })\r\n    }\r\n\r\n    loadOptions=(inputValue,callback)=>{\r\n        \r\n    }\r\n\r\n    handleInputChange = (newValue) => {\r\n        const inputValue = newValue.replace(/\\W/g, '');\r\n        this.setState({inputValue});\r\n        this.autosuggest();\r\n        return inputValue;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AsyncSelect placeholder=\"Enter keyword ..\" className=\"selectBar\" onInputChange={this.handleInputChange}\r\n                         loadOptions={t}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectBar;\r\n"]},"metadata":{},"sourceType":"module"}